#!/bin/bash
#
#
# Often in development mode, we retrieve a database from a production server
# and each users have their own password.
# Here we force all of them equal to usernames.
#
# Resetting the password means a new encrypted hash is generated for the password,
# and Odoo would invalidate the session, meaning we have to login at each container
# restart. It inserts a parameter in ir_config_parameter to keep track that passwords
# were reset.
#
# Similarly, we disable TOTP authentication (two factor authentication).
#
# These resets are only done once per database.

if [ "$RUNNING_ENV" = "dev" ] ; then

    if [ "$( psql -tAc "SELECT 1 FROM pg_database WHERE datname='$DB_NAME'" )" != '1' ]
    then
        echo "Database does not exist, ignoring script"
        exit 0
    fi

    echo "Reset admin user credentials"

    psql << EOF

    UPDATE res_users 
    SET active = True,
    login = 'admin'
    WHERE id = (SELECT res_id FROM ir_model_data WHERE name='user_admin');

EOF

    echo "Setting users' passwords to their usernames."

    psql << EOF

    UPDATE res_users SET password = login
    FROM (SELECT count(key) as done
          FROM ir_config_parameter
          WHERE key = 'dev.password.reset') params
    WHERE params.done = 0;

    INSERT INTO ir_config_parameter (key, value, create_uid, write_uid, create_date, write_date)
    VALUES ('dev.password.reset', 1, 1, 1, now(), now())
    ON CONFLICT DO NOTHING;

EOF

    echo "Disable password policies."

    # OCA/server-auth add-on "password_security"
    if [ "$( psql -tAc "SELECT 1 FROM information_schema.columns where table_name= 'res_company' and column_name = 'password_policy_enabled';" )" == '1' ]
    then
        psql -c "UPDATE res_company SET password_policy_enabled = FALSE, password_expiration = 0;"
    fi

    # Odoo add-on "auth_password_policy"
    psql -c "UPDATE ir_config_parameter SET value = 0 WHERE key = 'auth_password_policy.minlength';"

    # 'auth_totp' is installed automatically on Odoo >= 14.0
    if [ "$( psql -tAc "SELECT 1 FROM information_schema.columns WHERE table_name= 'res_users' AND column_name = 'totp_secret';" )" == '1' ]
    then
        echo "Unset users' TOTP secrets to disable two factor authentication."
        psql << EOF

        UPDATE res_users SET totp_secret = NULL
        FROM (SELECT count(key) as done
            FROM ir_config_parameter
            WHERE key = 'dev.totp_secret.reset') params
        WHERE params.done = 0;

        -- Remove the key that enforce the TOTP authentication (auth_totp_mail_enforce)
        DELETE FROM ir_config_parameter
        WHERE key='auth_totp.policy'
        AND NOT EXISTS (
            SELECT key
            FROM ir_config_parameter
            WHERE key = 'dev.totp_secret.reset' AND value = '1'
        );

        INSERT INTO ir_config_parameter (key, value, create_uid, write_uid, create_date, write_date)
        VALUES ('dev.totp_secret.reset', 1, 1, 1, now(), now())
        ON CONFLICT DO NOTHING;
EOF
    fi

fi
